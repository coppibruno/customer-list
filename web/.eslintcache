[{"C:\\Programacao\\totvs\\todo\\web\\web\\src\\index.js":"1","C:\\Programacao\\totvs\\todo\\web\\web\\src\\routes\\index.js":"2","C:\\Programacao\\totvs\\todo\\web\\web\\src\\views\\Home\\index.js":"3","C:\\Programacao\\totvs\\todo\\web\\web\\src\\views\\QrCode\\index.js":"4","C:\\Programacao\\totvs\\todo\\web\\web\\src\\views\\Task\\index.js":"5","C:\\Programacao\\totvs\\todo\\web\\web\\src\\views\\Home\\styles.js":"6","C:\\Programacao\\totvs\\todo\\web\\web\\src\\views\\QrCode\\styles.js":"7","C:\\Programacao\\totvs\\todo\\web\\web\\src\\views\\Task\\styles.js":"8","C:\\Programacao\\totvs\\todo\\web\\web\\src\\services\\api.js":"9","C:\\Programacao\\totvs\\todo\\web\\web\\src\\utils\\isConnected.js":"10","C:\\Programacao\\totvs\\todo\\web\\web\\src\\utils\\typeIcons.js":"11","C:\\Programacao\\totvs\\todo\\web\\web\\src\\components\\Header\\index.js":"12","C:\\Programacao\\totvs\\todo\\web\\web\\src\\components\\Footer\\index.js":"13","C:\\Programacao\\totvs\\todo\\web\\web\\src\\components\\TaskCard\\index.js":"14","C:\\Programacao\\totvs\\todo\\web\\web\\src\\components\\FilterCard\\index.js":"15","C:\\Programacao\\totvs\\todo\\web\\web\\src\\components\\Footer\\styles.js":"16","C:\\Programacao\\totvs\\todo\\web\\web\\src\\components\\TaskCard\\styles.js":"17","C:\\Programacao\\totvs\\todo\\web\\web\\src\\components\\FilterCard\\styles.js":"18","C:\\Programacao\\totvs\\todo\\web\\web\\src\\components\\Header\\styles.js":"19"},{"size":218,"mtime":1626712192441,"results":"20","hashOfConfig":"21"},{"size":613,"mtime":1626712192442,"results":"22","hashOfConfig":"21"},{"size":2512,"mtime":1626713439498,"results":"23","hashOfConfig":"21"},{"size":1464,"mtime":1626712192453,"results":"24","hashOfConfig":"21"},{"size":4812,"mtime":1626712192454,"results":"25","hashOfConfig":"21"},{"size":882,"mtime":1626712192451,"results":"26","hashOfConfig":"21"},{"size":1173,"mtime":1626712192453,"results":"27","hashOfConfig":"21"},{"size":2303,"mtime":1626712192455,"results":"28","hashOfConfig":"21"},{"size":122,"mtime":1626712192443,"results":"29","hashOfConfig":"21"},{"size":92,"mtime":1626713199338,"results":"30","hashOfConfig":"21"},{"size":652,"mtime":1626712192447,"results":"31","hashOfConfig":"21"},{"size":1219,"mtime":1626714796216,"results":"32","hashOfConfig":"21"},{"size":256,"mtime":1626715038021,"results":"33","hashOfConfig":"21"},{"size":721,"mtime":1626712192440,"results":"34","hashOfConfig":"21"},{"size":342,"mtime":1626712192434,"results":"35","hashOfConfig":"21"},{"size":378,"mtime":1626715376558,"results":"36","hashOfConfig":"21"},{"size":870,"mtime":1626712192441,"results":"37","hashOfConfig":"21"},{"size":620,"mtime":1626712192435,"results":"38","hashOfConfig":"21"},{"size":1852,"mtime":1626714914239,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1c77ol7",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Programacao\\totvs\\todo\\web\\web\\src\\index.js",[],["82","83"],"C:\\Programacao\\totvs\\todo\\web\\web\\src\\routes\\index.js",[],"C:\\Programacao\\totvs\\todo\\web\\web\\src\\views\\Home\\index.js",["84","85","86","87","88","89","90","91","92"],"import React, { useState, useEffect } from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport * as S from './styles';\r\n\r\nimport api from '../../services/api';\r\nimport isConnected from '../../utils/isConnected';\r\n\r\n//NOSSOS COMPONENTES\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport FilterCard from '../../components/FilterCard';\r\nimport TaskCard from '../../components/TaskCard';\r\n\r\nfunction Home() {\r\n  \r\n  const [filterActived, setFilterActived] = useState('all');\r\n  const [tasks, setTasks] = useState([]);\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  async function getCustomers(){\r\n    await api.get(`/task/filter/${filterActived}/${isConnected}`)\r\n    .then(response => {\r\n\r\n      setTasks( response.data );\r\n\r\n    }).catch(error => {\r\n\r\n      console.error(error);\r\n\r\n    });\r\n  }\r\n\r\n\r\n\r\n  function Notification(){\r\n    setFilterActived('late');\r\n  }\r\n\r\n  //AO RECARREGAR A TELA OU O ESTADO FILTERACTIVED MUDAR CHAMA ESSE BLOCO\r\n  useEffect(() => {\r\n    getCustomers();\r\n  }, [filterActived]);\r\n\r\n  return (\r\n    <S.Container>\r\n      <Header clickNotification={Notification} />\r\n\r\n      <S.FilterArea>\r\n\r\n        <button type=\"button\" onClick={() => setFilterActived(\"all\")}>\r\n          <FilterCard title=\"Todos\" actived={filterActived == \"all\"}  />\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={() => setFilterActived(\"today\")}>\r\n          <FilterCard title=\"Hoje\" actived={filterActived == \"today\"}  />\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={() => setFilterActived(\"week\")}>\r\n          <FilterCard title=\"Semana\" actived={filterActived == \"week\"}  />\r\n        </button>\r\n\r\n        <button type=\"button\"  onClick={() => setFilterActived(\"month\")}>\r\n          <FilterCard title=\"MÃªs\" actived={filterActived == \"month\"} />\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={() => setFilterActived(\"year\")}>\r\n          <FilterCard title=\"Ano\" actived={filterActived == \"year\"}  />\r\n        </button>\r\n        \r\n      </S.FilterArea>\r\n\r\n      <S.Title>\r\n        <h3>{ filterActived === 'late' ? \"TAREFAS ATRASADAS\" : \"TAREFAS\"}</h3>\r\n      </S.Title>\r\n\r\n      <S.Content>\r\n        {\r\n          tasks.map(t => (\r\n            <Link to={`/task/${t._id}`}>\r\n              <TaskCard type={t.type} title={t.tittle} when={t.when} done={t.done}/>\r\n            </Link>\r\n          ))\r\n        }\r\n      </S.Content>\r\n\r\n      <Footer/>\r\n    </S.Container>\r\n  )\r\n}\r\n\r\nexport default Home;\r\n","C:\\Programacao\\totvs\\todo\\web\\web\\src\\views\\QrCode\\index.js",[],"C:\\Programacao\\totvs\\todo\\web\\web\\src\\views\\Task\\index.js",["93","94","95","96"],"import React, { useState, useEffect } from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport * as S from './styles';\r\nimport {format} from 'date-fns';\r\nimport api from '../../services/api';\r\nimport isConnected from '../../utils/isConnected';\r\n\r\n//NOSSOS COMPONENTES\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\n\r\nimport iconCalendar from '../../assets/calendar.png';\r\nimport iconClock from '../../assets/clock.png';\r\n\r\nimport typeIcons from '../../utils/typeIcons';\r\n\r\nfunction Task({ match }) {\r\n  \r\n  const [redirect, setRedirect] = useState(false);\r\n  const [type, setType] = useState();\r\n  const [id, setId] = useState();\r\n  const [done, setDone] = useState(false);\r\n  const [title, setTitle] = useState();\r\n  const [description, setDescription] = useState();\r\n  const [date, setDate] = useState();\r\n  const [hour, setHour] = useState();\r\n\r\n\r\n  async function LoadTaskDetails(){\r\n    await api.get(`/task/${match.params.id}`)\r\n    .then( (response) => {\r\n      setType(response.data.type);\r\n      setDone(response.data.done);\r\n      setTitle(response.data.tittle);\r\n      setDescription(response.data.description);\r\n      setDate( format( new Date(response.data.when), 'yyyy-MM-dd' ) );\r\n      setHour( format( new Date(response.data.when), 'HH:mm') );\r\n    });\r\n  }\r\n\r\n  async function save(){\r\n\r\n    //ValidaÃ§Ã£o de dados\r\n    if (!title)\r\n      return alert(\"VocÃª precisa informar o tÃ­tulo\");\r\n    else if(!description)\r\n      return alert(\"VocÃª precisa informar a descriÃ§Ã£o\");\r\n    else if(!type)\r\n      return alert(\"VocÃª precisa informar o tipo\");\r\n    else if(!date)\r\n      return alert(\"VocÃª precisa informar a data\");\r\n    else if(!hour)\r\n      return alert(\"VocÃª precisa informar a hora\");\r\n\r\n    if(match.params.id){\r\n        await api.put(`/task/${match.params.id}`, {\r\n          macaddress: isConnected,\r\n          done,\r\n          type,\r\n          tittle: title,\r\n          description,\r\n          when: `${date}T${hour}:00.000` \r\n      }).then( () =>\r\n        setRedirect(true)\r\n      )\r\n    }else{\r\n\r\n        await api.post('/task', {\r\n          macaddress: isConnected,\r\n          type,\r\n          tittle: title,\r\n          description,\r\n          when: `${date}T${hour}:00.000` \r\n      }).then( () =>\r\n        setRedirect(true)\r\n      )\r\n\r\n    }\r\n\r\n  }\r\n\r\n  async function Remove(){\r\n\r\n    const res = window.confirm('Deseja excluir a tarefa?');\r\n\r\n    if (res){\r\n      await api.delete(`/task/${match.params.id}`)\r\n      .then( () => setRedirect(true))\r\n    }\r\n  }\r\n\r\n  //AO RECARREGAR A TELA OU O ESTADO FILTERACTIVED MUDAR CHAMA ESSE BLOCO\r\n  useEffect(() => {\r\n    if (!isConnected)\r\n    setRedirect(true);\r\n\r\n    LoadTaskDetails();\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <S.Container>\r\n      { redirect && <Redirect to=\"/\" /> } \r\n\r\n      <Header />\r\n\r\n      <S.Form>\r\n\r\n          <S.TypeIcons>\r\n              {\r\n                  typeIcons.map((icon, index) => (\r\n                      \r\n                    index > 0 && \r\n                      <button type=\"button\" onClick={ () => setType(index)}>\r\n                         <img src={icon} alt=\"Ãcone\" className={type && type != index && 'inative'}/>\r\n                     </button>\r\n                  ))\r\n              }\r\n          </S.TypeIcons>\r\n\r\n          <S.Input>\r\n            <span>TÃ­tulo</span>\r\n            <input  type=\"text\" placeholder=\"TÃ­tulo da tarefa...\" \r\n              onChange={e => setTitle(e.target.value)} value={title}/> \r\n          </S.Input>\r\n\r\n          <S.TextArea>\r\n            <span>DescriÃ§Ã£o</span>\r\n            <textarea \r\n            rows={5} placeholder=\"Detalhes da tarefa..\" \r\n            onChange={e => setDescription(e.target.value)} value={description}\r\n            ></textarea>\r\n          </S.TextArea>\r\n\r\n          <S.Input>\r\n            <span>Data</span>\r\n            <input type=\"date\" placeholder=\"Data\"\r\n            onChange={e => setDate(e.target.value)} value={date}\r\n            /> \r\n            <img src={iconCalendar} alt=\"CalendÃ¡rio\" />\r\n          </S.Input>\r\n\r\n          <S.Input>\r\n            <span>Hora</span>\r\n            <input type=\"time\" placeholder=\"Hora\"\r\n            onChange={e => setHour(e.target.value)} value={hour}/> \r\n            <img src={iconClock} alt=\"RelÃ³gio\" />\r\n          </S.Input>\r\n\r\n          <S.Options>\r\n            <div>\r\n              <input type=\"checkbox\" checked={done} onChange={() => setDone(!done)} />\r\n              <span>CONCLUÃDO</span>\r\n            </div>\r\n            { match.params.id && <button type=\"button\" onClick={Remove}>EXCLUIR</button> }\r\n          </S.Options>\r\n\r\n          <S.Save>\r\n            <button type=\"button\" onClick={save}>SALVAR</button>\r\n          </S.Save>\r\n\r\n      </S.Form>\r\n\r\n      <Footer/>\r\n    </S.Container>\r\n  )\r\n}\r\n\r\nexport default Task;\r\n","C:\\Programacao\\totvs\\todo\\web\\web\\src\\views\\Home\\styles.js",[],"C:\\Programacao\\totvs\\todo\\web\\web\\src\\views\\QrCode\\styles.js",[],"C:\\Programacao\\totvs\\todo\\web\\web\\src\\views\\Task\\styles.js",[],"C:\\Programacao\\totvs\\todo\\web\\web\\src\\services\\api.js",[],"C:\\Programacao\\totvs\\todo\\web\\web\\src\\utils\\isConnected.js",[],"C:\\Programacao\\totvs\\todo\\web\\web\\src\\utils\\typeIcons.js",[],"C:\\Programacao\\totvs\\todo\\web\\web\\src\\components\\Header\\index.js",["97"],"C:\\Programacao\\totvs\\todo\\web\\web\\src\\components\\Footer\\index.js",[],"C:\\Programacao\\totvs\\todo\\web\\web\\src\\components\\TaskCard\\index.js",["98","99"],"import React, { useMemo } from 'react';\r\nimport * as S from './styles';\r\nimport typeIcons from '../../utils/typeIcons';\r\n\r\nimport { format } from 'date-fns';\r\n\r\nfunction TaskCard({ type, title, when, done }) {\r\n  const date = useMemo( () => format(new Date(when), 'dd/MM/yyyy') );\r\n  const hour = useMemo( () => format(new Date(when), 'HH:mm') );\r\n\r\n  return (\r\n    <S.Container done={done}>\r\n        <S.TopCard>\r\n            <img src={typeIcons[type]} alt=\"Icone da Tarefa\" />\r\n            <h3>{title}</h3>\r\n        </S.TopCard>\r\n            \r\n        <S.BottomCard>\r\n            <strong>{date}</strong>\r\n            <span>{hour}</span>\r\n        </S.BottomCard>\r\n    </S.Container> \r\n  )\r\n}\r\n\r\nexport default TaskCard;\r\n","C:\\Programacao\\totvs\\todo\\web\\web\\src\\components\\FilterCard\\index.js",[],"C:\\Programacao\\totvs\\todo\\web\\web\\src\\components\\Footer\\styles.js",[],"C:\\Programacao\\totvs\\todo\\web\\web\\src\\components\\TaskCard\\styles.js",[],"C:\\Programacao\\totvs\\todo\\web\\web\\src\\components\\FilterCard\\styles.js",[],"C:\\Programacao\\totvs\\todo\\web\\web\\src\\components\\Header\\styles.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":2,"column":15,"nodeType":"106","messageId":"107","endLine":2,"endColumn":23},{"ruleId":"104","severity":1,"message":"108","line":18,"column":10,"nodeType":"106","messageId":"107","endLine":18,"endColumn":18},{"ruleId":"104","severity":1,"message":"109","line":18,"column":20,"nodeType":"106","messageId":"107","endLine":18,"endColumn":31},{"ruleId":"110","severity":1,"message":"111","line":42,"column":6,"nodeType":"112","endLine":42,"endColumn":21,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":51,"column":60,"nodeType":"116","messageId":"117","endLine":51,"endColumn":62},{"ruleId":"114","severity":1,"message":"115","line":55,"column":59,"nodeType":"116","messageId":"117","endLine":55,"endColumn":61},{"ruleId":"114","severity":1,"message":"115","line":59,"column":61,"nodeType":"116","messageId":"117","endLine":59,"endColumn":63},{"ruleId":"114","severity":1,"message":"115","line":63,"column":58,"nodeType":"116","messageId":"117","endLine":63,"endColumn":60},{"ruleId":"114","severity":1,"message":"115","line":67,"column":58,"nodeType":"116","messageId":"117","endLine":67,"endColumn":60},{"ruleId":"104","severity":1,"message":"118","line":21,"column":10,"nodeType":"106","messageId":"107","endLine":21,"endColumn":12},{"ruleId":"104","severity":1,"message":"119","line":21,"column":14,"nodeType":"106","messageId":"107","endLine":21,"endColumn":19},{"ruleId":"110","severity":1,"message":"120","line":99,"column":6,"nodeType":"112","endLine":99,"endColumn":8,"suggestions":"121"},{"ruleId":"114","severity":1,"message":"122","line":115,"column":78,"nodeType":"116","messageId":"117","endLine":115,"endColumn":80},{"ruleId":"104","severity":1,"message":"123","line":13,"column":10,"nodeType":"106","messageId":"107","endLine":13,"endColumn":19},{"ruleId":"110","severity":1,"message":"124","line":8,"column":16,"nodeType":"106","endLine":8,"endColumn":23},{"ruleId":"110","severity":1,"message":"124","line":9,"column":16,"nodeType":"106","endLine":9,"endColumn":23},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'redirect' is assigned a value but never used.","'setRedirect' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCustomers'. Either include it or remove the dependency array.","ArrayExpression",["127"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'id' is assigned a value but never used.","'setId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'LoadTaskDetails'. Either include it or remove the dependency array.",["128"],"Expected '!==' and instead saw '!='.","'lateCount' is assigned a value but never used.","React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},"Update the dependencies array to be: [filterActived, getCustomers]",{"range":"133","text":"134"},"Update the dependencies array to be: [LoadTaskDetails]",{"range":"135","text":"136"},[1066,1081],"[filterActived, getCustomers]",[2727,2729],"[LoadTaskDetails]"]